#!/bin/bash

# TypeScript/JavaScript „ÇØ„É©„Çπ‰ΩøÁî®Ê§úÂá∫„Çπ„ÇØ„É™„Éó„Éà
# „Åì„ÅÆ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Åß„ÅØÈñ¢Êï∞Âûã„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„ÇíÊé°Áî®„Åó„Å¶„ÅÑ„Çã„Åü„ÇÅ„ÄÅ„ÇØ„É©„Çπ„ÅÆ‰ΩøÁî®„ÇíÁ¶ÅÊ≠¢„Åó„Åæ„Åô

set -e

echo "üîç Checking for class usage in TypeScript/JavaScript files..."

# Ê§úÁ¥¢ÂØæË±°„Éá„Ç£„É¨„ÇØ„Éà„É™Ôºà„ÉÜ„Çπ„Éà„Éï„Ç°„Ç§„É´„ÇÇÂê´„ÇÄÔºâ
SEARCH_DIRS="src test"

# ËøΩÂä†„Åß„Éó„É≠„Ç∏„Çß„ÇØ„Éà„É´„Éº„Éà„ÅÆÂÄãÂà•„Éï„Ç°„Ç§„É´„ÇÇ„ÉÅ„Çß„ÉÉ„ÇØ
ROOT_FILES="*.ts *.tsx *.js *.jsx"

# „ÇØ„É©„ÇπÊ§úÂá∫„Éë„Çø„Éº„É≥
CLASS_PATTERNS=(
    "export class "
    "class [A-Z]"
    "export default class"
    "abstract class"
    "export abstract class"
)

# Èô§Â§ñ„Éë„Çø„Éº„É≥Ôºà„Ç≥„É°„É≥„Éà„Å™„Å©Ôºâ
EXCLUDE_PATTERNS=(
    "^\s*\/\/"      # ÂçòË°å„Ç≥„É°„É≥„Éà
    "^\s*\*"        # Ë§áÊï∞Ë°å„Ç≥„É°„É≥„Éà
    "\/\*.*\*\/"    # „Ç§„É≥„É©„Ç§„É≥„Ç≥„É°„É≥„Éà
)

found_classes=0
total_files=0

# TypeScript/JavaScript„Éï„Ç°„Ç§„É´„ÇíÊ§úÁ¥¢
for dir in $SEARCH_DIRS; do
    if [ -d "$dir" ]; then
        while IFS= read -r -d '' file; do
            ((total_files++))

            # ÂêÑ„ÇØ„É©„Çπ„Éë„Çø„Éº„É≥„Çí„ÉÅ„Çß„ÉÉ„ÇØ
            for pattern in "${CLASS_PATTERNS[@]}"; do
                # „Éï„Ç°„Ç§„É´ÂÜÖ„Åß„Éë„Çø„Éº„É≥„ÇíÊ§úÁ¥¢
                matches=$(grep -n "$pattern" "$file" 2>/dev/null || true)

                if [ -n "$matches" ]; then
                    # Èô§Â§ñ„Éë„Çø„Éº„É≥„Åß„Å™„ÅÑ„Åã„ÉÅ„Çß„ÉÉ„ÇØ
                    while IFS= read -r match; do
                        if [ -n "$match" ]; then
                            line_content=$(echo "$match" | cut -d: -f2-)
                            is_excluded=false

                            for exclude_pattern in "${EXCLUDE_PATTERNS[@]}"; do
                                if echo "$line_content" | grep -qE "$exclude_pattern"; then
                                    is_excluded=true
                                    break
                                fi
                            done

                            if [ "$is_excluded" = false ]; then
                                echo "‚ùå Class found in $file:"
                                echo "   Line $(echo "$match" | cut -d: -f1): $line_content"
                                ((found_classes++))
                            fi
                        fi
                    done <<< "$matches"
                fi
            done
        done < <(find "$dir" -type f \( -name "*.ts" -o -name "*.js" -o -name "*.tsx" -o -name "*.jsx" \) -print0 2>/dev/null)
    else
        echo "‚ö†Ô∏è  Warning: Directory '$dir' not found"
    fi
done

# „Éó„É≠„Ç∏„Çß„ÇØ„Éà„É´„Éº„Éà„Éï„Ç°„Ç§„É´„ÇÇ„ÉÅ„Çß„ÉÉ„ÇØ
for pattern in $ROOT_FILES; do
    for file in $pattern; do
        if [ -f "$file" ] && [ "$file" != "*.ts" ] && [ "$file" != "*.tsx" ] && [ "$file" != "*.js" ] && [ "$file" != "*.jsx" ]; then
            ((total_files++))

            # ÂêÑ„ÇØ„É©„Çπ„Éë„Çø„Éº„É≥„Çí„ÉÅ„Çß„ÉÉ„ÇØ
            for class_pattern in "${CLASS_PATTERNS[@]}"; do
                # „Éï„Ç°„Ç§„É´ÂÜÖ„Åß„Éë„Çø„Éº„É≥„ÇíÊ§úÁ¥¢
                matches=$(grep -n "$class_pattern" "$file" 2>/dev/null || true)

                if [ -n "$matches" ]; then
                    # Èô§Â§ñ„Éë„Çø„Éº„É≥„Åß„Å™„ÅÑ„Åã„ÉÅ„Çß„ÉÉ„ÇØ
                    while IFS= read -r match; do
                        if [ -n "$match" ]; then
                            line_content=$(echo "$match" | cut -d: -f2-)
                            is_excluded=false

                            for exclude_pattern in "${EXCLUDE_PATTERNS[@]}"; do
                                if echo "$line_content" | grep -qE "$exclude_pattern"; then
                                    is_excluded=true
                                    break
                                fi
                            done

                            if [ "$is_excluded" = false ]; then
                                echo "‚ùå Class found in $file:"
                                echo "   Line $(echo "$match" | cut -d: -f1): $line_content"
                                ((found_classes++))
                            fi
                        fi
                    done <<< "$matches"
                fi
            done
        fi
    done
done

echo ""
echo "üìä Scan Results:"
echo "   Files scanned: $total_files"
echo "   Classes found: $found_classes"

if [ $found_classes -eq 0 ]; then
    echo "‚úÖ No classes detected! Functional programming rules maintained."
    exit 0
else
    echo ""
    echo "üö´ Class usage detected!"
    echo "This project follows functional programming principles."
    echo "Please refactor classes to use:"
    echo "   ‚Ä¢ Type definitions with factory functions"
    echo "   ‚Ä¢ Pure functions and higher-order functions"
    echo "   ‚Ä¢ Immutable data structures"
    echo ""
    echo "For examples, see the existing codebase implementation."
    exit 1
fi
